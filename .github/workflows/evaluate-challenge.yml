name: Evaluate Challenge
on:
  issues:
    types: [opened, edited]
  
jobs:
  parse:
    runs-on: ubuntu-latest
    outputs:
      matrixRepo: ${{ steps.extract_values.outputs.matrixRepo }}
    steps:
      - uses: actions/checkout@v2

      - name: Print Issue Body
        run: echo '${{ github.event.issue.body }}'
      
      - uses: stefanbuck/github-issue-parser@v3
        id: challenge-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/challenge.yaml
          
      - name: Print Parser result
        run: echo '${{ steps.challenge-parser.outputs.jsonString }}'

      - name: Extract Values
        id: extract_values
        run: |
          jsonString='${{ steps.challenge-parser.outputs.jsonString }}'
          # first_repo_owner=$(echo $jsonString | jq -r '.repo_first | split("/")[0]')
          # first_repo_name=$(echo $jsonString | jq -r '.repo_first | split("/")[1]')
          # echo "::set-output name=first_repo_owner::$first_repo_owner"
          # echo "::set-output name=first_repo_name::$first_repo_name"
          
          # second_repo_owner=$(echo $jsonString | jq -r '.repo_second | split("/")[0]')
          # second_repo_name=$(echo $jsonString | jq -r '.repo_second | split("/")[1]')
          # echo "::set-output name=second_repo_owner::$second_repo_owner"
          # echo "::set-output name=second_repo_name::$second_repo_name"

          matrixRepo=$(echo $jsonString | jq -r '[(.repo_first | {owner: split("/")[0], name: split("/")[1]}), (.repo_second | {owner: split("/")[0], name: split("/")[1]})]')
          echo "::set-output name=matrixRepo::$matrixRepo"
          echo "----"
          echo $matrixRepo

      - run: echo "${{ extract_values.outputs.matrixRepo }}"
  

  query:
    runs-on: ubuntu-latest
    needs:
      - parse
    # strategy:
    #   matrix:
    #     repos: ${{ fromJSON(needs.parse.outputs.matrixRepo) }}
    
    steps:
      # - run: echo "${{ matrix.repos }}"
      - run: echo "${{ needs.parse.outputs.matrixRepo }}"

      # - name: Ottieni il numero di stelle del repository
      #   id: query_stars
      #   uses: octokit/graphql-action@v2.x
      #   with:
      #     query: |
      #       query getstars($owner:String!, $name:String!) {
      #         repository(owner:$owner,name:$name) {
      #           stargazers {
      #             totalCount
      #           }
      #         }
      #       }
      #     # owner: "${{ steps.extract_values.outputs.first_repo_owner }}"
      #     # name: "${{ steps.extract_values.outputs.first_repo_name }}"
      #     owner: "${{ matrix.repos.owner }}"
      #     name: "${{matrix.repos.name }}"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - run: "echo 'stars: ${{ steps.query_stars.outputs.data }}'"

